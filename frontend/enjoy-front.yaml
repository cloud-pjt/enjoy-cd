#apiVersion: argoproj.io/v1alpha1 # apps/v1 -> argoproj.io/v1alpha1
#kind: Rollout
apiVersion: apps/v1
kind: Deployment
metadata:
  name: enjoy-front-deploy
spec:
  replicas: 4
  selector:
    matchLabels:
      app: enjoy-front
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1          # 업데이트 시 추가로 생성할 Pod 수
      maxUnavailable: 1    # 업데이트 중 동시에 다운될 수 있는 Pod 수
  template:
    metadata:
      name: enjoy-front-pod
      labels:
        app: enjoy-front
    spec:
      containers:
        - name: enjoy-front-container
          imagePullPolicy: Always
          image: 255260635764.dkr.ecr.ap-northeast-2.amazonaws.com/enjoy-front:20250922-080203
          ports:
            - containerPort: 80
          livenessProbe:
            httpGet:
              path: /
              port: 80
          resources:
            requests:
              cpu: 150m
              memory: 100Mi
            limits:
              cpu: 150m
              memory: 100Mi
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: enjoy-front
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: enjoy-front
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname 
                labelSelector:
                  matchLabels:
                    app: enjoy-front
#  strategy:
#    canary:
#      steps:
#        - setWeight: 25
#        - pause: { duration: 10 }
#        - setWeight: 50
#        - pause: { duration: 10 }
#        - setWeight: 100
